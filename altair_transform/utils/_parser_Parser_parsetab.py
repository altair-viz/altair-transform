
# _parser_Parser_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightQUESTIONleftLOGICAL_ORleftLOGICAL_ANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftEQUALNEQUALIDENTNIDENTleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTZFRSHIFTleftPLUSMINUSleftTIMESDIVIDEMODULOleftEXPrightUMINUSUPLUSLOGICAL_NOTBITWISE_NOTBINARY BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR COLON COMMA DIVIDE EQUAL EXP FLOAT GREATER GREATER_EQUAL HEX IDENT LBRACE LBRACKET LESS LESS_EQUAL LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MODULO NAME NEQUAL NIDENT OCTAL PERIOD PLUS QUESTION RBRACE RBRACKET REGEX RPAREN RSHIFT STRING TIMES ZFRSHIFT\n        expression : expression PLUS expression\n                   | expression MINUS expression\n                   | expression TIMES expression\n                   | expression DIVIDE expression\n                   | expression EXP expression\n                   | expression MODULO expression\n                   | expression LESS expression\n                   | expression LESS_EQUAL expression\n                   | expression GREATER expression\n                   | expression GREATER_EQUAL expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression ZFRSHIFT expression\n                   | expression EQUAL expression\n                   | expression IDENT expression\n                   | expression NEQUAL expression\n                   | expression NIDENT expression\n                   | expression BITWISE_AND expression\n                   | expression BITWISE_OR expression\n                   | expression BITWISE_XOR expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n        expression : expression QUESTION expression COLON expression\n        expression : MINUS expression %prec UMINUS\n                   | PLUS expression %prec UPLUS\n                   | BITWISE_NOT expression\n                   | LOGICAL_NOT expression\n        \n        expression : atom\n        \n        atom : number\n             | string\n             | regex\n             | global\n             | list\n             | object\n             | group\n             | attraccess\n             | functioncall\n             | indexing\n        \n        number : HEX\n               | OCTAL\n               | BINARY\n               | FLOAT\n        string : STRINGregex : REGEXglobal : NAMEname : NAME\n        list : LBRACKET RBRACKET\n             | LBRACKET arglist RBRACKET\n        \n        object : LBRACE RBRACE\n               | LBRACE objectarglist RBRACE\n        \n        objectarglist : objectarglist COMMA objectarg\n                      | objectarg\n        \n        objectarg : objectkey COLON expression\n                  | name\n        \n        objectkey : name\n                  | string\n                  | number\n        group : LPAREN expression RPARENattraccess : atom PERIOD NAMEindexing : atom LBRACKET expression RBRACKET\n        functioncall : atom LPAREN RPAREN\n                     | atom LPAREN arglist RPAREN\n        \n        arglist : arglist COMMA expression\n                | expression\n        '
    
_lr_action_items = {'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,100,101,102,103,104,105,107,108,],[3,28,3,3,3,3,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-25,-24,-26,-27,3,3,-47,28,-49,28,-1,-2,-3,-4,-5,-6,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-59,-61,28,-48,3,-50,3,-58,3,-62,-60,28,28,28,]),'PLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,100,101,102,103,104,105,107,108,],[2,27,2,2,2,2,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,-25,-24,-26,-27,2,2,-47,27,-49,27,-1,-2,-3,-4,-5,-6,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-59,-61,27,-48,2,-50,2,-58,2,-62,-60,27,27,27,]),'BITWISE_NOT':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LOGICAL_NOT':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'HEX':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,99,100,102,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'OCTAL':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,99,100,102,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'BINARY':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,99,100,102,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'FLOAT':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,99,100,102,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'STRING':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,99,100,102,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'REGEX':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'NAME':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,56,97,99,100,102,],[23,23,23,23,23,23,67,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,92,23,23,23,67,23,23,]),'LBRACKET':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,57,60,92,93,96,97,98,100,101,102,103,104,],[24,24,24,24,24,56,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-47,-49,-59,-61,-48,24,-50,24,-58,24,-62,-60,]),'LBRACE':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,57,60,92,93,96,97,98,100,101,102,103,104,],[26,26,26,26,26,55,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-47,-49,-59,-61,-48,26,-50,26,-58,26,-62,-60,]),'$end':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,96,98,101,103,104,108,],[0,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,-49,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-59,-61,-48,-50,-58,-62,-60,-23,]),'TIMES':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[29,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,29,-49,29,29,29,-3,-4,-5,-6,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-59,-61,29,-48,-50,-58,-62,-60,29,29,29,]),'DIVIDE':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[30,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,30,-49,30,30,30,-3,-4,-5,-6,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-59,-61,30,-48,-50,-58,-62,-60,30,30,30,]),'EXP':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[31,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,31,-49,31,31,31,31,31,-5,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-59,-61,31,-48,-50,-58,-62,-60,31,31,31,]),'MODULO':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[32,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,32,-49,32,32,32,-3,-4,-5,-6,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-59,-61,32,-48,-50,-58,-62,-60,32,32,32,]),'LESS':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[33,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,33,-49,33,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,33,33,33,33,33,33,33,33,33,33,-59,-61,33,-48,-50,-58,-62,-60,33,33,33,]),'LESS_EQUAL':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[34,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,34,-49,34,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,34,34,34,34,34,34,34,34,34,34,-59,-61,34,-48,-50,-58,-62,-60,34,34,34,]),'GREATER':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[35,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,35,-49,35,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,35,35,35,35,35,35,35,35,35,35,-59,-61,35,-48,-50,-58,-62,-60,35,35,35,]),'GREATER_EQUAL':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[36,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,36,-49,36,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,36,36,36,36,36,36,36,36,36,36,-59,-61,36,-48,-50,-58,-62,-60,36,36,36,]),'LSHIFT':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[37,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,37,-49,37,-1,-2,-3,-4,-5,-6,37,37,37,37,-11,-12,-13,37,37,37,37,37,37,37,37,37,37,-59,-61,37,-48,-50,-58,-62,-60,37,37,37,]),'RSHIFT':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[38,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,38,-49,38,-1,-2,-3,-4,-5,-6,38,38,38,38,-11,-12,-13,38,38,38,38,38,38,38,38,38,38,-59,-61,38,-48,-50,-58,-62,-60,38,38,38,]),'ZFRSHIFT':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[39,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,39,-49,39,-1,-2,-3,-4,-5,-6,39,39,39,39,-11,-12,-13,39,39,39,39,39,39,39,39,39,39,-59,-61,39,-48,-50,-58,-62,-60,39,39,39,]),'EQUAL':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[40,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,40,-49,40,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,40,40,40,40,40,40,-59,-61,40,-48,-50,-58,-62,-60,40,40,40,]),'IDENT':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[41,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,41,-49,41,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,41,41,41,41,41,41,-59,-61,41,-48,-50,-58,-62,-60,41,41,41,]),'NEQUAL':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[42,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,42,-49,42,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,42,42,42,42,42,42,-59,-61,42,-48,-50,-58,-62,-60,42,42,42,]),'NIDENT':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[43,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,43,-49,43,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,43,43,43,43,43,43,-59,-61,43,-48,-50,-58,-62,-60,43,43,43,]),'BITWISE_AND':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[44,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,44,-49,44,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,44,44,44,44,44,-59,-61,44,-48,-50,-58,-62,-60,44,44,44,]),'BITWISE_OR':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[45,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,45,-49,45,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,45,45,45,-59,-61,45,-48,-50,-58,-62,-60,45,45,45,]),'BITWISE_XOR':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[46,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,46,-49,46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,46,-20,46,46,46,-59,-61,46,-48,-50,-58,-62,-60,46,46,46,]),'LOGICAL_OR':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[47,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,47,-49,47,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,47,-59,-61,47,-48,-50,-58,-62,-60,47,47,47,]),'LOGICAL_AND':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[48,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,48,-49,48,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,48,-22,48,-59,-61,48,-48,-50,-58,-62,-60,48,48,48,]),'QUESTION':([1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,98,101,103,104,105,107,108,],[49,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,49,-49,49,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,49,-59,-61,49,-48,-50,-58,-62,-60,49,49,49,]),'RBRACKET':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,50,51,52,53,57,58,59,60,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,98,101,103,104,105,108,],[-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,57,-25,-24,-26,-27,-47,96,-64,-49,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-59,-61,104,-48,-50,-58,-62,-60,-63,-23,]),'COMMA':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,58,59,60,61,62,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,98,101,103,104,105,106,107,108,],[-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,97,-64,-49,99,-52,-54,-46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-59,-61,97,-48,-50,-58,-62,-60,-63,-51,-53,-23,]),'RPAREN':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,55,57,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,96,98,101,103,104,105,108,],[-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,93,-47,-64,-49,101,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-59,-61,103,-48,-50,-58,-62,-60,-63,-23,]),'COLON':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,50,51,52,53,57,60,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,98,101,103,104,108,],[-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-25,-24,-26,-27,-47,-49,100,-55,-56,-57,-46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,102,-59,-61,-48,-50,-58,-62,-60,-23,]),'RBRACE':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,50,51,52,53,57,60,61,62,64,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,96,98,101,103,104,106,107,108,],[-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,60,-25,-24,-26,-27,-47,-49,98,-52,-54,-46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-59,-61,-48,-50,-58,-62,-60,-51,-53,-23,]),'PERIOD':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,57,60,92,93,96,98,101,103,104,],[54,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-49,-59,-61,-48,-50,-58,-62,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[1,50,51,52,53,59,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,59,95,105,107,108,]),'atom':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'number':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,99,100,102,],[7,7,7,7,7,7,66,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,66,7,7,]),'string':([0,2,3,4,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,99,100,102,],[8,8,8,8,8,8,65,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,65,8,8,]),'regex':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'global':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'list':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'object':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'group':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'attraccess':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'functioncall':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'indexing':([0,2,3,4,5,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,55,56,97,100,102,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'arglist':([24,55,],[58,94,]),'objectarglist':([25,],[61,]),'objectarg':([25,99,],[62,106,]),'objectkey':([25,99,],[63,63,]),'name':([25,99,],[64,64,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','_parser.py',197),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','_parser.py',198),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','_parser.py',199),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','_parser.py',200),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','_parser.py',201),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','_parser.py',202),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','_parser.py',203),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','_parser.py',204),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','_parser.py',205),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','_parser.py',206),
  ('expression -> expression LSHIFT expression','expression',3,'p_expression_binop','_parser.py',207),
  ('expression -> expression RSHIFT expression','expression',3,'p_expression_binop','_parser.py',208),
  ('expression -> expression ZFRSHIFT expression','expression',3,'p_expression_binop','_parser.py',209),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_binop','_parser.py',210),
  ('expression -> expression IDENT expression','expression',3,'p_expression_binop','_parser.py',211),
  ('expression -> expression NEQUAL expression','expression',3,'p_expression_binop','_parser.py',212),
  ('expression -> expression NIDENT expression','expression',3,'p_expression_binop','_parser.py',213),
  ('expression -> expression BITWISE_AND expression','expression',3,'p_expression_binop','_parser.py',214),
  ('expression -> expression BITWISE_OR expression','expression',3,'p_expression_binop','_parser.py',215),
  ('expression -> expression BITWISE_XOR expression','expression',3,'p_expression_binop','_parser.py',216),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression_binop','_parser.py',217),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression_binop','_parser.py',218),
  ('expression -> expression QUESTION expression COLON expression','expression',5,'p_expression_ternary','_parser.py',223),
  ('expression -> MINUS expression','expression',2,'p_expression_unaryop','_parser.py',228),
  ('expression -> PLUS expression','expression',2,'p_expression_unaryop','_parser.py',229),
  ('expression -> BITWISE_NOT expression','expression',2,'p_expression_unaryop','_parser.py',230),
  ('expression -> LOGICAL_NOT expression','expression',2,'p_expression_unaryop','_parser.py',231),
  ('expression -> atom','expression',1,'p_expression_atom','_parser.py',237),
  ('atom -> number','atom',1,'p_atom','_parser.py',243),
  ('atom -> string','atom',1,'p_atom','_parser.py',244),
  ('atom -> regex','atom',1,'p_atom','_parser.py',245),
  ('atom -> global','atom',1,'p_atom','_parser.py',246),
  ('atom -> list','atom',1,'p_atom','_parser.py',247),
  ('atom -> object','atom',1,'p_atom','_parser.py',248),
  ('atom -> group','atom',1,'p_atom','_parser.py',249),
  ('atom -> attraccess','atom',1,'p_atom','_parser.py',250),
  ('atom -> functioncall','atom',1,'p_atom','_parser.py',251),
  ('atom -> indexing','atom',1,'p_atom','_parser.py',252),
  ('number -> HEX','number',1,'p_number','_parser.py',258),
  ('number -> OCTAL','number',1,'p_number','_parser.py',259),
  ('number -> BINARY','number',1,'p_number','_parser.py',260),
  ('number -> FLOAT','number',1,'p_number','_parser.py',261),
  ('string -> STRING','string',1,'p_string','_parser.py',266),
  ('regex -> REGEX','regex',1,'p_regex','_parser.py',270),
  ('global -> NAME','global',1,'p_global','_parser.py',274),
  ('name -> NAME','name',1,'p_name','_parser.py',278),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','_parser.py',283),
  ('list -> LBRACKET arglist RBRACKET','list',3,'p_list','_parser.py',284),
  ('object -> LBRACE RBRACE','object',2,'p_object','_parser.py',293),
  ('object -> LBRACE objectarglist RBRACE','object',3,'p_object','_parser.py',294),
  ('objectarglist -> objectarglist COMMA objectarg','objectarglist',3,'p_objectarglist','_parser.py',303),
  ('objectarglist -> objectarg','objectarglist',1,'p_objectarglist','_parser.py',304),
  ('objectarg -> objectkey COLON expression','objectarg',3,'p_objectarg','_parser.py',313),
  ('objectarg -> name','objectarg',1,'p_objectarg','_parser.py',314),
  ('objectkey -> name','objectkey',1,'p_objectkey','_parser.py',323),
  ('objectkey -> string','objectkey',1,'p_objectkey','_parser.py',324),
  ('objectkey -> number','objectkey',1,'p_objectkey','_parser.py',325),
  ('group -> LPAREN expression RPAREN','group',3,'p_group','_parser.py',330),
  ('attraccess -> atom PERIOD NAME','attraccess',3,'p_attraccess','_parser.py',334),
  ('indexing -> atom LBRACKET expression RBRACKET','indexing',4,'p_indexing','_parser.py',338),
  ('functioncall -> atom LPAREN RPAREN','functioncall',3,'p_functioncall','_parser.py',343),
  ('functioncall -> atom LPAREN arglist RPAREN','functioncall',4,'p_functioncall','_parser.py',344),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','_parser.py',353),
  ('arglist -> expression','arglist',1,'p_arglist','_parser.py',354),
]
