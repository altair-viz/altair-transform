
# _parser_Parser_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLOGICAL_ORleftLOGICAL_ANDleftBITWISE_ORleftBITWISE_XORleftBITWISE_ANDleftEQUALNEQUALIDENTNIDENTleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTZFRSHIFTleftPLUSMINUSleftTIMESDIVIDEMODULOleftEXPrightUMINUSUPLUSLOGICAL_NOTBITWISE_NOTBINARY BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR COLON COMMA DIVIDE EQUAL EXP FLOAT GREATER GREATER_EQUAL HEX IDENT LBRACE LBRACKET LESS LESS_EQUAL LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MODULO NAME NEQUAL NIDENT OCTAL PERIOD PLUS RBRACE RBRACKET RPAREN RSHIFT STRING TIMES ZFRSHIFTstatement : expression\n        expression : expression PLUS expression\n                   | expression MINUS expression\n                   | expression TIMES expression\n                   | expression DIVIDE expression\n                   | expression EXP expression\n                   | expression MODULO expression\n                   | expression LESS expression\n                   | expression LESS_EQUAL expression\n                   | expression GREATER expression\n                   | expression GREATER_EQUAL expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression ZFRSHIFT expression\n                   | expression EQUAL expression\n                   | expression IDENT expression\n                   | expression NEQUAL expression\n                   | expression NIDENT expression\n                   | expression BITWISE_AND expression\n                   | expression BITWISE_OR expression\n                   | expression BITWISE_XOR expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n        \n        expression : MINUS expression %prec UMINUS\n                   | PLUS expression %prec UPLUS\n                   | BITWISE_NOT expression\n                   | LOGICAL_NOT expression\n        expression : term\n        term : atom\n             | attraccess\n             | functioncall\n             | indexing\n        \n        number : HEX\n               | OCTAL\n               | BINARY\n               | FLOAT\n        \n        atom : number\n             | STRING\n             | global\n             | list\n             | object\n             | group\n        global : NAME\n        list : LBRACKET RBRACKET\n             | LBRACKET arglist RBRACKET\n        \n        object : LBRACE RBRACE\n               | LBRACE objectarglist RBRACE\n        \n        objectarglist : objectarglist COMMA objectarg\n                      | objectarg\n        \n        objectarg : objectkey COLON expression\n                  | NAME\n        \n        objectkey : NAME\n                  | STRING\n                  | number\n        group : LPAREN expression RPARENattraccess : atom PERIOD NAMEindexing : atom LBRACKET expression RBRACKET\n        functioncall : atom LPAREN RPAREN\n                     | atom LPAREN arglist RPAREN\n        \n        arglist : arglist COMMA expression\n                | expression\n        '
    
_lr_action_items = {'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,97,98,99,100,102,],[4,27,4,4,4,4,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,4,4,-33,-34,-35,-36,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-25,-24,-26,-27,4,4,27,-44,27,-46,-2,-3,-4,-5,-6,-7,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-56,-58,27,-55,-45,4,-47,4,-59,-57,27,27,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,97,98,99,100,102,],[3,26,3,3,3,3,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,3,3,-33,-34,-35,-36,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,-25,-24,-26,-27,3,3,26,-44,26,-46,-2,-3,-4,-5,-6,-7,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-56,-58,26,-55,-45,3,-47,3,-59,-57,26,26,]),'BITWISE_NOT':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LOGICAL_NOT':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'STRING':([0,3,4,5,6,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,96,97,],[13,13,13,13,13,13,13,64,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,64,13,]),'HEX':([0,3,4,5,6,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,96,97,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'OCTAL':([0,3,4,5,6,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,96,97,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'BINARY':([0,3,4,5,6,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,96,97,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'FLOAT':([0,3,4,5,6,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,96,97,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'NAME':([0,3,4,5,6,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,52,53,54,94,96,97,],[18,18,18,18,18,18,18,63,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,88,18,18,18,63,18,]),'LBRACKET':([0,3,4,5,6,8,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,56,59,92,93,94,95,97,],[20,20,20,20,20,54,-37,-38,-39,-40,-41,-42,-43,20,20,-33,-34,-35,-36,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-44,-46,-55,-45,20,-47,20,]),'LBRACE':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'LPAREN':([0,3,4,5,6,8,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,56,59,92,93,94,95,97,],[19,19,19,19,19,53,-37,-38,-39,-40,-41,-42,-43,19,19,-33,-34,-35,-36,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-44,-46,-55,-45,19,-47,19,]),'$end':([1,2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,56,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,95,98,99,],[0,-1,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,-44,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-56,-58,-55,-45,-47,-59,-57,]),'TIMES':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[28,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,28,-44,28,-46,28,28,-4,-5,-6,-7,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-56,-58,28,-55,-45,-47,-59,-57,28,28,]),'DIVIDE':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[29,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,29,-44,29,-46,29,29,-4,-5,-6,-7,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-56,-58,29,-55,-45,-47,-59,-57,29,29,]),'EXP':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[30,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,30,-44,30,-46,30,30,30,30,-6,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-56,-58,30,-55,-45,-47,-59,-57,30,30,]),'MODULO':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[31,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,31,-44,31,-46,31,31,-4,-5,-6,-7,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-56,-58,31,-55,-45,-47,-59,-57,31,31,]),'LESS':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[32,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,32,-44,32,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,32,32,32,32,32,32,32,32,32,-56,-58,32,-55,-45,-47,-59,-57,32,32,]),'LESS_EQUAL':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[33,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,33,-44,33,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,33,33,33,33,33,33,33,33,33,-56,-58,33,-55,-45,-47,-59,-57,33,33,]),'GREATER':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[34,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,34,-44,34,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,34,34,34,34,34,34,34,34,34,-56,-58,34,-55,-45,-47,-59,-57,34,34,]),'GREATER_EQUAL':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[35,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,35,-44,35,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,35,35,35,35,35,35,35,35,35,-56,-58,35,-55,-45,-47,-59,-57,35,35,]),'LSHIFT':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[36,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,36,-44,36,-46,-2,-3,-4,-5,-6,-7,36,36,36,36,-12,-13,-14,36,36,36,36,36,36,36,36,36,-56,-58,36,-55,-45,-47,-59,-57,36,36,]),'RSHIFT':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[37,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,37,-44,37,-46,-2,-3,-4,-5,-6,-7,37,37,37,37,-12,-13,-14,37,37,37,37,37,37,37,37,37,-56,-58,37,-55,-45,-47,-59,-57,37,37,]),'ZFRSHIFT':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[38,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,38,-44,38,-46,-2,-3,-4,-5,-6,-7,38,38,38,38,-12,-13,-14,38,38,38,38,38,38,38,38,38,-56,-58,38,-55,-45,-47,-59,-57,38,38,]),'EQUAL':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[39,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,39,-44,39,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,39,39,39,39,39,-56,-58,39,-55,-45,-47,-59,-57,39,39,]),'IDENT':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[40,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,40,-44,40,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,40,40,40,40,40,-56,-58,40,-55,-45,-47,-59,-57,40,40,]),'NEQUAL':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[41,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,41,-44,41,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,41,41,41,41,41,-56,-58,41,-55,-45,-47,-59,-57,41,41,]),'NIDENT':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[42,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,42,-44,42,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,42,42,42,42,42,-56,-58,42,-55,-45,-47,-59,-57,42,42,]),'BITWISE_AND':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[43,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,43,-44,43,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,43,43,43,43,-56,-58,43,-55,-45,-47,-59,-57,43,43,]),'BITWISE_OR':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[44,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,44,-44,44,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,44,44,-56,-58,44,-55,-45,-47,-59,-57,44,44,]),'BITWISE_XOR':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[45,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,45,-44,45,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,45,-21,45,45,-56,-58,45,-55,-45,-47,-59,-57,45,45,]),'LOGICAL_OR':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[46,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,46,-44,46,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-56,-58,46,-55,-45,-47,-59,-57,46,46,]),'LOGICAL_AND':([2,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,102,],[47,-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,47,-44,47,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,47,-23,-56,-58,47,-55,-45,-47,-59,-57,47,47,]),'RPAREN':([7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,53,55,56,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,98,99,100,],[-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,89,92,-44,-61,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-56,-58,98,-55,-45,-47,-59,-57,-60,]),'RBRACKET':([7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,48,49,50,51,56,57,58,59,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,98,99,100,],[-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,56,-33,-34,-35,-36,-25,-24,-26,-27,-44,93,-61,-46,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-56,-58,99,-55,-45,-47,-59,-57,-60,]),'COMMA':([7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,48,49,50,51,56,57,58,59,60,61,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,98,99,100,101,102,],[-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-25,-24,-26,-27,-44,94,-61,-46,96,-49,-51,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-56,-58,94,-55,-45,-47,-59,-57,-60,-48,-50,]),'RBRACE':([7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,48,49,50,51,56,59,60,61,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,95,98,99,101,102,],[-28,-29,-30,-31,-32,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,59,-25,-24,-26,-27,-44,-46,95,-49,-51,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-56,-58,-55,-45,-47,-59,-57,-48,-50,]),'PERIOD':([8,12,13,14,15,16,17,18,21,22,23,24,56,59,92,93,95,],[52,-37,-38,-39,-40,-41,-42,-43,-33,-34,-35,-36,-44,-46,-55,-45,-47,]),'COLON':([21,22,23,24,62,63,64,65,],[-33,-34,-35,-36,97,-52,-53,-54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[2,48,49,50,51,55,58,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,58,91,100,102,]),'term':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'atom':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'attraccess':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'functioncall':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'indexing':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'number':([0,3,4,5,6,19,20,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,96,97,],[12,12,12,12,12,12,12,65,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,65,12,]),'global':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'list':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'object':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'group':([0,3,4,5,6,19,20,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,54,94,97,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'arglist':([20,53,],[57,90,]),'objectarglist':([25,],[60,]),'objectarg':([25,96,],[61,101,]),'objectkey':([25,96,],[62,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','_parser.py',195),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','_parser.py',200),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','_parser.py',201),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','_parser.py',202),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','_parser.py',203),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','_parser.py',204),
  ('expression -> expression MODULO expression','expression',3,'p_expression_binop','_parser.py',205),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','_parser.py',206),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','_parser.py',207),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','_parser.py',208),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','_parser.py',209),
  ('expression -> expression LSHIFT expression','expression',3,'p_expression_binop','_parser.py',210),
  ('expression -> expression RSHIFT expression','expression',3,'p_expression_binop','_parser.py',211),
  ('expression -> expression ZFRSHIFT expression','expression',3,'p_expression_binop','_parser.py',212),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_binop','_parser.py',213),
  ('expression -> expression IDENT expression','expression',3,'p_expression_binop','_parser.py',214),
  ('expression -> expression NEQUAL expression','expression',3,'p_expression_binop','_parser.py',215),
  ('expression -> expression NIDENT expression','expression',3,'p_expression_binop','_parser.py',216),
  ('expression -> expression BITWISE_AND expression','expression',3,'p_expression_binop','_parser.py',217),
  ('expression -> expression BITWISE_OR expression','expression',3,'p_expression_binop','_parser.py',218),
  ('expression -> expression BITWISE_XOR expression','expression',3,'p_expression_binop','_parser.py',219),
  ('expression -> expression LOGICAL_OR expression','expression',3,'p_expression_binop','_parser.py',220),
  ('expression -> expression LOGICAL_AND expression','expression',3,'p_expression_binop','_parser.py',221),
  ('expression -> MINUS expression','expression',2,'p_expression_unaryop','_parser.py',228),
  ('expression -> PLUS expression','expression',2,'p_expression_unaryop','_parser.py',229),
  ('expression -> BITWISE_NOT expression','expression',2,'p_expression_unaryop','_parser.py',230),
  ('expression -> LOGICAL_NOT expression','expression',2,'p_expression_unaryop','_parser.py',231),
  ('expression -> term','expression',1,'p_expression_term','_parser.py',237),
  ('term -> atom','term',1,'p_term','_parser.py',242),
  ('term -> attraccess','term',1,'p_term','_parser.py',243),
  ('term -> functioncall','term',1,'p_term','_parser.py',244),
  ('term -> indexing','term',1,'p_term','_parser.py',245),
  ('number -> HEX','number',1,'p_number','_parser.py',251),
  ('number -> OCTAL','number',1,'p_number','_parser.py',252),
  ('number -> BINARY','number',1,'p_number','_parser.py',253),
  ('number -> FLOAT','number',1,'p_number','_parser.py',254),
  ('atom -> number','atom',1,'p_atom','_parser.py',260),
  ('atom -> STRING','atom',1,'p_atom','_parser.py',261),
  ('atom -> global','atom',1,'p_atom','_parser.py',262),
  ('atom -> list','atom',1,'p_atom','_parser.py',263),
  ('atom -> object','atom',1,'p_atom','_parser.py',264),
  ('atom -> group','atom',1,'p_atom','_parser.py',265),
  ('global -> NAME','global',1,'p_global','_parser.py',270),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','_parser.py',275),
  ('list -> LBRACKET arglist RBRACKET','list',3,'p_list','_parser.py',276),
  ('object -> LBRACE RBRACE','object',2,'p_object','_parser.py',287),
  ('object -> LBRACE objectarglist RBRACE','object',3,'p_object','_parser.py',288),
  ('objectarglist -> objectarglist COMMA objectarg','objectarglist',3,'p_objectarglist','_parser.py',297),
  ('objectarglist -> objectarg','objectarglist',1,'p_objectarglist','_parser.py',298),
  ('objectarg -> objectkey COLON expression','objectarg',3,'p_objectarg','_parser.py',307),
  ('objectarg -> NAME','objectarg',1,'p_objectarg','_parser.py',308),
  ('objectkey -> NAME','objectkey',1,'p_objectkey','_parser.py',317),
  ('objectkey -> STRING','objectkey',1,'p_objectkey','_parser.py',318),
  ('objectkey -> number','objectkey',1,'p_objectkey','_parser.py',319),
  ('group -> LPAREN expression RPAREN','group',3,'p_group','_parser.py',324),
  ('attraccess -> atom PERIOD NAME','attraccess',3,'p_attraccess','_parser.py',328),
  ('indexing -> atom LBRACKET expression RBRACKET','indexing',4,'p_indexing','_parser.py',332),
  ('functioncall -> atom LPAREN RPAREN','functioncall',3,'p_functioncall','_parser.py',342),
  ('functioncall -> atom LPAREN arglist RPAREN','functioncall',4,'p_functioncall','_parser.py',343),
  ('arglist -> arglist COMMA expression','arglist',3,'p_arglist','_parser.py',354),
  ('arglist -> expression','arglist',1,'p_arglist','_parser.py',355),
]
