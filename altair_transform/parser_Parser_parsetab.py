
# parser_Parser_parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftEXPrightUMINUSUPLUSDIVIDE EXP LPAREN MINUS NAME NUMBER PERIOD PLUS RPAREN TIMESstatement : expression\n        expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXP expression\n        expression : MINUS expression %prec UMINUSexpression : PLUS expression %prec UPLUSexpression : groupexpression : NUMBERexpression : NAME\n        expression : group PERIOD NAME\n                   | NAME PERIOD NAME\n        group : LPAREN expression RPAREN'
    
_lr_action_items = {'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,],[4,10,4,4,-9,-10,-11,4,4,4,4,4,4,-8,-7,10,-2,-3,-4,-5,-6,-12,-13,-14,]),'PLUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,18,19,20,21,22,23,24,25,26,],[3,9,3,3,-9,-10,-11,3,3,3,3,3,3,-8,-7,9,-2,-3,-4,-5,-6,-12,-13,-14,]),'NUMBER':([0,3,4,8,9,10,11,12,13,],[6,6,6,6,6,6,6,6,6,]),'NAME':([0,3,4,8,9,10,11,12,13,16,17,],[7,7,7,7,7,7,7,7,7,24,25,]),'LPAREN':([0,3,4,8,9,10,11,12,13,],[8,8,8,8,8,8,8,8,8,]),'$end':([1,2,5,6,7,14,15,19,20,21,22,23,24,25,26,],[0,-1,-9,-10,-11,-8,-7,-2,-3,-4,-5,-6,-12,-13,-14,]),'TIMES':([2,5,6,7,14,15,18,19,20,21,22,23,24,25,26,],[11,-9,-10,-11,-8,-7,11,11,11,-4,-5,-6,-12,-13,-14,]),'DIVIDE':([2,5,6,7,14,15,18,19,20,21,22,23,24,25,26,],[12,-9,-10,-11,-8,-7,12,12,12,-4,-5,-6,-12,-13,-14,]),'EXP':([2,5,6,7,14,15,18,19,20,21,22,23,24,25,26,],[13,-9,-10,-11,-8,-7,13,13,13,13,13,-6,-12,-13,-14,]),'RPAREN':([5,6,7,14,15,18,19,20,21,22,23,24,25,26,],[-9,-10,-11,-8,-7,26,-2,-3,-4,-5,-6,-12,-13,-14,]),'PERIOD':([5,7,26,],[16,17,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,8,9,10,11,12,13,],[2,14,15,18,19,20,21,22,23,]),'group':([0,3,4,8,9,10,11,12,13,],[5,5,5,5,5,5,5,5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',99),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',104),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',105),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',106),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',107),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','parser.py',108),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',123),
  ('expression -> PLUS expression','expression',2,'p_expression_uplus','parser.py',127),
  ('expression -> group','expression',1,'p_expression_group','parser.py',131),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',135),
  ('expression -> NAME','expression',1,'p_expression_name','parser.py',139),
  ('expression -> group PERIOD NAME','expression',3,'p_expression_attr','parser.py',148),
  ('expression -> NAME PERIOD NAME','expression',3,'p_expression_attr','parser.py',149),
  ('group -> LPAREN expression RPAREN','group',3,'p_group_paren','parser.py',159),
]
